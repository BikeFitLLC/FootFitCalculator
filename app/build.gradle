apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

/**
 * @return suffix to be appended to version name.
 */
def customVersionNameSuffix() {
    def buildNum = System.getenv('BUDDYBUILD_BUILD_NUMBER')
    return buildNum != null ? "$buildNum" : "Local"
}

android {
    compileSdkVersion commonCompileSdkVersion
    buildToolsVersion commonBuildToolsVersion

    defaultConfig {
        applicationId "com.bikefit.wedgecalculator"
        minSdkVersion commonMinSdkVersion
        targetSdkVersion commonTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix ".dev"
            versionNameSuffix "." + customVersionNameSuffix() + "-dev"
        }
        release {
            minifyEnabled true
            shrinkResources true
            versionNameSuffix "." + customVersionNameSuffix()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    /**
     * Android support libraries
     */
    compile "com.android.support:support-annotations:${androidSupportLibVersion}"
    compile "com.android.support:appcompat-v7:${androidSupportLibVersion}"
    compile "com.android.support:support-v13:${androidSupportLibVersion}"
    compile "com.android.support:design:${androidSupportLibVersion}"
    compile "com.android.support:percent:${androidSupportLibVersion}"

    /**
     * Google Play Services Analytics
     */
    compile "com.google.android.gms:play-services-analytics:${googlePlayServices}"

    /**
     * ButterKnife view injection
     */
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    apt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"


    /**
     * Test libraries
     */
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    androidTestCompile("com.google.dexmaker:dexmaker-mockito:${mockitoDexVersion}")
    androidTestCompile "org.mockito:mockito-core:${mockitoVersion}"
    androidTestCompile("com.android.support.test.espresso:espresso-core:${espressoVersion}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    /**
     * Material-Camera
     */
    compile project(':material-camera')

    /**
     * Leak Canary
     */
    debugCompile "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"

}
